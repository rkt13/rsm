-----------------------------------------------------------------------------------------
-- 1_HEAL_DEN.SQL
-- VERSION: 1.0.4
-- DATE: 2023-01-24
-- PURPOSE: GENERATES DENOMINATOR TABLE FOR HEALING COMMUNITY MISOWN MEASURES,
--          ACCORDING TO MEASURE SPECIFICATIONS PROVIDED BY HEAL TEAM

---- HEAL_RUN ---------------------------------------------------------------------------
-- RUN TABLE THAT SETS BOUNDS OF ANALYSIS (START/END MONTH) AND SAVES LATEST RUN DATE

DROP TABLE IF EXISTS HEAL_RUN;

CREATE TABLE HEAL_RUN AS 
SELECT
  CURRENT_DATE() AS RUN_DATE,
  '2017-01-01'::DATE AS START_DATE,
  '2022-06-30'::DATE AS END_DATE,
  CAST((SELECT MAX(MARS_PRCS_CYCLE_NUM) FROM MISOWN.CLAIM_TRANS) AS INTEGER) -- 
;

---- HEAL YEAR --------------------------------------------------------------------------
-- SETS START AND END DATES FOR CALENDAR/MEASUREMENT YEARS ACCORDING TO MEASURE SPECS

DROP TABLE IF EXISTS HEAL_YEAR;
CREATE TABLE HEAL_YEAR (
  YEAR VARCHAR(10),
  START_DATE DATE,
  END_DATE DATE
);

INSERT INTO HEAL_YEAR VALUES ('CY2017', '2017-01-01', '2017-12-31');
INSERT INTO HEAL_YEAR VALUES ('CY2018', '2018-01-01', '2018-12-31');
INSERT INTO HEAL_YEAR VALUES ('CY2019', '2019-01-01', '2019-12-31');
INSERT INTO HEAL_YEAR VALUES ('CY2020', '2020-01-01', '2020-12-31');
INSERT INTO HEAL_YEAR VALUES ('CY2021', '2021-01-01', '2021-12-31');
INSERT INTO HEAL_YEAR VALUES ('SFY2017', '2017-04-01', '2018-03-31');
INSERT INTO HEAL_YEAR VALUES ('SFY2018', '2018-04-01', '2019-03-31');
INSERT INTO HEAL_YEAR VALUES ('SFY2019', '2019-04-01', '2020-03-31');
INSERT INTO HEAL_YEAR VALUES ('SFY2020', '2020-04-01', '2021-03-31');
INSERT INTO HEAL_YEAR VALUES ('SFY2021', '2021-04-01', '2022-03-31');
INSERT INTO HEAL_YEAR VALUES ('FFY2017', '2017-09-01', '2018-10-31');
INSERT INTO HEAL_YEAR VALUES ('FFY2018', '2018-09-01', '2019-10-31');
INSERT INTO HEAL_YEAR VALUES ('FFY2019', '2019-09-01', '2020-10-31');
INSERT INTO HEAL_YEAR VALUES ('FFY2020', '2020-09-01', '2021-10-31');
INSERT INTO HEAL_YEAR VALUES ('FFY2021', '2021-09-01', '2022-10-31');

--INSERT INTO HEAL_YEAR VALUES ('MY20212022', '2021-07-01', '2022-06-30');
--COMMIT;

---- HEAL_NDC ---------------------------------------------------------------------------
-- IMPORT NDC REFERENCE FILE 
DROP TABLE IF EXISTS HEAL_NDC;
CREATE TABLE HEAL_NDC (
  HEAL_DRUG_CAT VARCHAR(20),
  TCGPI_ID VARCHAR(20),
  NDC_UPC_HRI VARCHAR(20),
  TCGPI_NAME VARCHAR(500),
  DRUG_NAME VARCHAR(100),
  BUP_INJECTION INT
);

COPY HEAL_NDC FROM LOCAL 'C:\Users\cyt30\OneDrive - New York State Office of Information Technology Services\Documents\HEAL\HEALing Communities - Refresh - All - DRAFT-20230125\C. Input Files\HEAL_NDC_REF.csv' PARSER fcsvparser(); --update filepath as needed

/*
---- HEAL_COMMUNITY ----------------------------------------------------------------------
-- IMPORT COMMUNITY REFERENCE FILE
DROP TABLE IF EXISTS HEAL_COMMUNITY;
CREATE TABLE HEAL_COMMUNITY (
  STATE_ID VARCHAR(10),
  STATE VARCHAR(5),
  COMMUNITY_ID VARCHAR(10),
  COMMUNITY VARCHAR(100),
  REPORTER_ID VARCHAR(10),
  MBR_RES_COUNTY VARCHAR(100),
  FULL_COUNTY INT,
  POSTAL_CD VARCHAR(10)
);

COPY HEAL_COMMUNITY FROM LOCAL 'C:\Users\cyt30\OneDrive - New York State Office of Information Technology Services\Documents\HEAL\HEALing Communities - Refresh - All - DRAFT-20230125\C. Input Files\HEAL_Communities.csv' PARSER fcsvparser(); -- update file path as needed
*/
---- HEAL_MEMBER ENROLL -----------------------------------------------------------------
-- IDENTIFIES MEMBERS WHO QUALIFY FOR DENOMINATOR BASED ON ENROLLMENT, AGE, DUAL STATUS

-- YEAR TIMEFRAME
DROP TABLE IF EXISTS HEAL_MEMBER_ENROLL_YEAR;
CREATE LOCAL TEMPORARY TABLE HEAL_MEMBER_ENROLL_YEAR
ON COMMIT PRESERVE ROWS AS 
SELECT
  YEAR.YEAR,
  YEAR.START_DATE,
  YEAR.END_DATE,
  MAE.MBR_ID,
  MAE.MBR_AGE,  
  MAE.MBR_RES_COUNTY,
  MAE.PLAN_GROUP,
  MAE.PLAN_NAME_STD,
  MAE.DUAL_IND,
  MAE.RACE_DESCRIPTION,
  MAX(MAE.CALENDAR_DATE) AS LATEST_ENROLL_MONTH
FROM
  (SELECT 
       MBR_ID, 
       YEAR(CALENDAR_DATE) AS YEAR,
       MAX(CALENDAR_DATE) AS CALENDAR_DATE, 
       CASE WHEN SUM(CASE WHEN DUAL_IND = 'Dual' THEN 1 ELSE 0 END) > 0 THEN 1 ELSE 0 END AS DUAL_IND    
     FROM 
      DATABOOK.MA_ENROLLMENT_V3 MAE
  WHERE
      CALENDAR_DATE BETWEEN '2017-01-01' AND '2021-12-31'
     GROUP BY 1,2) LATEST  
JOIN
  DATABOOK.MA_ENROLLMENT_V3 MAE
ON 
 (MAE.MBR_ID = LATEST.MBR_ID) AND (LATEST.CALENDAR_DATE = MAE.CALENDAR_DATE)
JOIN HEAL_YEAR YEAR
ON (MAE.CALENDAR_DATE BETWEEN YEAR.START_DATE AND YEAR.END_DATE)
WHERE
  MAE.CALENDAR_DATE BETWEEN YEAR.START_DATE AND YEAR.END_DATE
GROUP BY 1,2,3,4,5,6,7,8,9,10
;


---- HEAL_DENOM -------------------------------------------------------------------------
---- JOIN MEMBER ENROLLMENT WITH STRATA CLAIMS TABLES AND DEMOGRAPHICS

-- YEAR TIMEFRAME
DROP TABLE IF EXISTS HEAL_DENOM_YEAR;
CREATE TABLE HEAL_DENOM_YEAR AS
SELECT
  D.YEAR,
  D.MBR_ID,  
  D.MBR_AGE,  
  D.MBR_RES_COUNTY,
  D.PLAN_GROUP,
  D.DUAL_IND,
  D.RACE_DESCRIPTION,
  D.START_DATE,
  D.END_DATE
FROM HEAL_MEMBER_ENROLL_YEAR D 
WHERE D.DUAL_IND = 'Non-Dual'
order by 2,1
;

/*
SELECT * FROM HEAL_DENOM_YEAR;
GRANT USAGE ON SCHEMA RTACANDONG TO IFLICK;
GRANT SELECT ON RTACANDONG.HEAL_DENOM_YEAR,RTACANDONG.HEAL_NDC TO IFLICK;
*/

