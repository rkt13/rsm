DROP TABLE IF EXISTS HEAL_HELPER;
CREATE TABLE HEAL_HELPER (
  MEASURE_NUM VARCHAR(8),
  MEASURE_DESC VARCHAR(500),
  MSR_ID VARCHAR(5),
  NUM_ID VARCHAR(20),
  NUM_DESC VARCHAR(299),
  DEN_ID VARCHAR(20),
  DEN_DESC VARCHAR(289)
);

COPY HEAL_HELPER FROM LOCAL 'C:\Users\cyt30\OneDrive - New York State Office of Information Technology Services\Documents\HEAL\HEAL Helper Table.csv' PARSER fcsvparser();
select * from heal_helper;

DROP TABLE IF EXISTS HEAL_NUM;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM
ON COMMIT PRESERVE ROWS AS
SELECT
  MSR_ID,
  CASE WHEN MSR_COMP_ID = 'POO-DEN' THEN 'OUD-PREV-NUM' ELSE MSR_COMP_ID END AS MSR_COMP_ID, 
  A.MSR_YR,
  B.MBR_ID,
  SUM(MSR_VAL) AS NUM
FROM 
  CDMOWN.MSR_RESULT_RY  A 
LEFT JOIN
  CDMOWN.MSR_ELIG_RY B
ON
  (A.MBR_KEY = B.MBR_KEY) AND (A.MSR_YR = B.MSR_YR)
WHERE (((LEFT(MSR_ID,4) IN ('HEAL', 'MOUD','MOED') OR LEFT(MSR_ID,3) IN ('PMM','MOO')) AND
      MSR_COMP_ID LIKE '%NUM%') OR
      (MSR_COMP_ID = 'POO-DEN')) AND
      RIGHT(A.MSR_YR,2) IN ('10', '04')
GROUP BY 1,2,3,4
ORDER BY 1,2
;

INSERT INTO HEAL_NUM
SELECT
  MSR_ID,
  CASE WHEN MSR_COMP_ID = 'POO-DEN' THEN 'OUD-PREV-NUM' ELSE MSR_COMP_ID END AS MSR_COMP_ID, 
  A.MSR_YR,
  B.MBR_ID,
  SUM(MSR_VAL) AS NUM
FROM 
  CDMOWN.MSR_RESULT_CY  A 
LEFT JOIN
  CDMOWN.MSR_ELIG_CY B
ON
  (A.MBR_KEY = B.MBR_KEY) AND (A.MSR_YR = B.MSR_YR)
WHERE (((LEFT(MSR_ID,4) IN ('HEAL', 'MOUD','MOED') OR LEFT(MSR_ID,3) IN ('PMM','MOO')) AND
      MSR_COMP_ID LIKE '%NUM%') OR
      (MSR_COMP_ID = 'POO-DEN')) 
GROUP BY 1,2,3,4
ORDER BY 1,2
;


DROP TABLE IF EXISTS HEAL_DEN;
CREATE LOCAL TEMPORARY TABLE HEAL_DEN
ON COMMIT PRESERVE ROWS AS
SELECT
  MSR_ID,
  MSR_COMP_ID, 
  A.MSR_YR,
  B.MBR_ID,
  SUM(MSR_VAL) AS DEN
FROM 
  CDMOWN.MSR_RESULT_RY  A 
LEFT JOIN
  CDMOWN.MSR_ELIG_RY B
ON
  (A.MBR_KEY = B.MBR_KEY) AND (A.MSR_YR = B.MSR_YR)
WHERE (LEFT(MSR_ID,4) IN ('HEAL', 'MOUD','MOED') OR LEFT(MSR_ID,3) IN ('PMM','MOO')) AND
      MSR_COMP_ID LIKE '%DEN%' AND
      RIGHT(A.MSR_YR,2) IN ('10', '04')
GROUP BY 1,2,3,4
ORDER BY 1,2
;

INSERT INTO HEAL_DEN
SELECT
  MSR_ID,
  MSR_COMP_ID, 
  A.MSR_YR,
  B.MBR_ID,
  SUM(MSR_VAL) AS DEN
FROM 
  CDMOWN.MSR_RESULT_CY  A 
LEFT JOIN
  CDMOWN.MSR_ELIG_CY B
ON
  (A.MBR_KEY = B.MBR_KEY) AND (A.MSR_YR = B.MSR_YR)
WHERE (LEFT(MSR_ID,4) IN ('HEAL', 'MOUD','MOED') OR LEFT(MSR_ID,3) IN ('PMM','MOO')) AND
      MSR_COMP_ID LIKE '%DEN%'
GROUP BY 1,2,3,4
ORDER BY 1,2
;

INSERT INTO HEAL_DEN
WITH LATEST AS (
  SELECT 
    MAE.MBR_ID,
    A.MSR_YR,
    MAX(CALENDAR_DATE) AS CALENDAR_DATE,
    CASE WHEN SUM(CASE WHEN DUAL_IND = 'Dual' THEN 1 ELSE 0 END) > 0 THEN 1 ELSE 0 END AS DUAL_IND
  FROM
    DATABOOK.MA_ENROLLMENT_V3 MAE
  JOIN
      CDMOWN.MSR_CAL A
     ON 
      (MAE.CALENDAR_DATE BETWEEN A.PER_BEG_DT AND A.PER_END_DT)
     WHERE
      CALENDAR_DATE  BETWEEN '2017-01-01' AND '2021-12-31' AND
      ((LEFT(A.MSR_YR,2) = 'CY') OR
      (LEFT(A.MSR_YR,2) = 'RY' AND (RIGHT(A.MSR_YR,2) IN ('10', '04'))
       ))
     GROUP BY 1,2
)

SELECT 
  'POO' AS MSR_ID,
  'OUD-PREV-DEN' AS MSR_COMP_ID, 
  MSR_YR,
  MAE.MBR_ID,
  1 AS DEN
FROM
  DATABOOK.MA_ENROLLMENT_V3 MAE
JOIN
  LATEST LATEST
ON 
  (MAE.MBR_ID = LATEST.MBR_ID) AND (MAE.CALENDAR_DATE = LATEST.CALENDAR_DATE)
WHERE LATEST.DUAL_IND = 0
;


DROP TABLE IF EXISTS HEAL_BASE;
CREATE TABLE HEAL_BASE AS 

WITH LATEST AS (
SELECT 
     MAE.MBR_ID, 
     CY.MSR_YR,
     MAX(CALENDAR_DATE) AS CALENDAR_DATE, 
     CASE WHEN SUM(CASE WHEN DUAL_IND = 'Dual' THEN 1 ELSE 0 END) > 0 THEN 1 ELSE 0 END AS DUAL_IND    
   FROM 
    DATABOOK.MA_ENROLLMENT_V3 MAE
   JOIN
    CDMOWN.MSR_ELIG_CY CY
   ON
    MAE.MBR_ID = CY.MBR_ID
   JOIN
    CDMOWN.MSR_CAL A
   ON 
    (MAE.CALENDAR_DATE BETWEEN A.PER_BEG_DT AND A.PER_END_DT) AND (CY.MSR_YR = A.MSR_YR)
   WHERE
    CALENDAR_DATE  BETWEEN '2017-01-01' AND '2021-12-31'
   GROUP BY 1,2
UNION ALL
  SELECT 
       MAE.MBR_ID, 
       RY.MSR_YR ,
       MAX(CALENDAR_DATE) AS CALENDAR_DATE, 
       CASE WHEN SUM(CASE WHEN DUAL_IND = 'Dual' THEN 1 ELSE 0 END) > 0 THEN 1 ELSE 0 END AS DUAL_IND    
     FROM 
      DATABOOK.MA_ENROLLMENT_V3 MAE
     JOIN
      CDMOWN.MSR_ELIG_RY RY
     ON
      MAE.MBR_ID = RY.MBR_ID
     JOIN
      CDMOWN.MSR_CAL A
     ON 
      (MAE.CALENDAR_DATE BETWEEN A.PER_BEG_DT AND A.PER_END_DT) AND (RY.MSR_YR = A.MSR_YR)
     WHERE
      CALENDAR_DATE  BETWEEN '2017-01-01' AND '2021-12-31'
     GROUP BY 1,2
)

SELECT 
  HELP.NUM_ID AS MSR_ID,
  MEASURE_NUM,
  CASE WHEN LEFT(DEN.MSR_YR,2) = 'CY' THEN 'CALENDAR'
       WHEN RIGHT(DEN.MSR_YR,2)= '10' THEN 'FEDERAL'
       WHEN RIGHT(DEN.MSR_YR,2) = '04' THEN 'STATE'
       END AS YEAR_TYPE,  
  CASE WHEN LEFT(LATEST.MSR_YR,2) = 'CY' THEN RIGHT(LATEST.MSR_YR,4)
       ELSE SUBSTRING(LATEST.MSR_YR,3,4)
       END AS MSR_YR,
  MEASURE_DESC,
  MAE.MBR_RES_COUNTY,
  CASE WHEN MAE.MBR_AGE BETWEEN 0 AND 4 THEN '0-4'
       WHEN MAE.MBR_AGE BETWEEN 5 AND 9 THEN '5-9'
       WHEN MAE.MBR_AGE BETWEEN 10 AND 14 THEN '10-14'
       WHEN MAE.MBR_AGE BETWEEN 15 AND 17 THEN '15-17'
       WHEN MAE.MBR_AGE BETWEEN 18 AND 21 THEN '18 -21'
       WHEN MAE.MBR_AGE BETWEEN 22 AND 24 THEN '22-24'
       WHEN MAE.MBR_AGE BETWEEN 25 AND 34 THEN '25-34'
       WHEN MAE.MBR_AGE BETWEEN 35 AND 44 THEN '35-44'
       WHEN MAE.MBR_AGE BETWEEN 45 AND 54 THEN '45-54'
       WHEN MAE.MBR_AGE BETWEEN 55 AND 64 THEN '55-64'
       WHEN MAE.MBR_AGE >=65 THEN '65 and over'
       ELSE 'UNAVAILABLE'
       END AS 'AGE_GROUP' ,
  MAE.PLAN_GROUP,
  MAE.RACE_DESCRIPTION,
  SUM(NUM.NUM) AS NUM,
  SUM(DEN.DEN) AS DEN
FROM
  HEAL_DEN DEN 
JOIN 
  HEAL_HELPER HELP
ON 
  HELP.DEN_ID = DEN.MSR_COMP_ID
LEFT JOIN 
  HEAL_NUM NUM
ON
  (HELP.NUM_ID = NUM.MSR_COMP_ID) AND
  (DEN.MSR_YR = NUM.MSR_YR) AND
  (DEN.MBR_ID = NUM.MBR_ID)
JOIN 
  CDMOWN.MSR MSR
ON 
  MSR.MSR_ID = DEN.MSR_ID
JOIN 
  LATEST
ON
  (LATEST.MBR_ID = DEN.MBR_ID) AND (LATEST.MSR_YR = DEN.MSR_YR)
JOIN 
   DATABOOK.MA_ENROLLMENT_V3 MAE
ON
  (LATEST.MBR_ID = MAE.MBR_ID) AND (LATEST.CALENDAR_DATE = MAE.CALENDAR_DATE)
GROUP BY 1,2,3,4,5,6,7,8,9;

GRANT USAGE ON SCHEMA RTACANDONG TO IFLICK, KWIJES, SDING, RJAEGER, BHATCHER;
GRANT SELECT ON RTACANDONG.HEAL_BASE,RTACANDONG.HEAL_HELPER,RTACANDONG.HEAL_RUN TO IFLICK, KWIJES, SDING, RJAEGER, BHATCHER;


SELECT * FROM HEAL_BASE WHERE YEAR_TYPE = 'CALENDAR' AND MSR_YR = '2017' AND AGE_GROUP ='UNAVAILABLE' AND MEASURE_NUM = '2.4';

SELECT COUNT(*) FROM HEAL_BASE;
