-----------------------------------------------------------------------------------------
-- 2_HEAL_NUM.SQL (ALL Measures 4.1.1 - 4.7.2)
-- VERSION: 1.0.4
-- DATE: 2023-01-24
-- PURPOSE: CALCULATES NUMERATORS FOR EACH HEAL MEASURES ACCORDING TO MEASURES SPECS
--          (1) CREATE OVERALL NUMERATOR TABLE FOR EACH YEAR/MONTH TIMEFRAME
--          (2) IDENTIFY RELEVANT CLAIMS FOR EACH MEASURE NUMERATOR IN TEMP TABLE
--          (3) INSERT MEASURE VALUES FOR EACH INTO OVERALL NUMERATOR TABLE



-- set AUTOCOMMIT ON;

---- HEAL_NUM ---------------------------------------------------------------------------
-- CREATES OVERALL NUMERATOR TABLE AT THE MSR-TIMEFRAME[YEAR/MONTH]-MEMBER DETAIL

--YEAR TIMEFRAME
DROP TABLE IF EXISTS HEAL_NUM_YEAR;
CREATE TABLE HEAL_NUM_YEAR (
  MSR_ID VARCHAR(10),
  YEAR VARCHAR(20),
  MBR_ID VARCHAR(10),
  MSR_VAL INT
);

-----------------------------------------------------------------------------------------
-- MEASURE 4.1.1-4.1.2 - NUMBER OF ED VISITS (BH/NON-BH)
-- IDENTIFY ALL ED VISITS (TCN LEVEL)
-- CHECK ALL LINES TO SEE IF BH DIAGNOSIS 

DROP TABLE IF EXISTS HEAL_ED_TCN;
CREATE TABLE HEAL_ED_TCN AS 
SELECT
  DISTINCT TCN
FROM MISOWN.CLAIM_TRANS CT
WHERE
  CT.LATEST_TRANS_IND = 'Y' AND 
  CT.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  CT.CLAIM_CLASS_CD = '61' AND
  (
    (CT.CLAIM_TRANS_SRC_CD = 'C' AND CT.RATE_CD IN ('2879', '1402', '1419')) 
    OR
    (  CT.CLAIM_TRANS_SRC_CD = 'E' AND 
      (CT.TYPE_OF_BILL_DIGITS_1_AND_2_CD IN ('13','85') OR CT.PL_OF_SRV_BILL_TYPE_CD IN ('13','85')) AND
        (CT.PROC_CD_1 IN ('99281','99282','99283','99284','99285') OR
         CT.CLAIM_TRANS_ID IN 
          (SELECT 
            CR.CLAIM_TRANS_ID 
           FROM MISOWN.CLAIM_REV CR 
           WHERE 
            CR.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
            CR.REV_CD_SUB IN ('0450', '0451', '0452', '0459'))
          )
    )
  )  
;

DROP TABLE IF EXISTS HEAL_NUM_411_412;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_411_412 
ON COMMIT PRESERVE ROWS AS 

WITH BH_DX AS (
SELECT
  CLAIM_TRANS_ID,
  MAX(CASE WHEN (
    --PRIMARY DX
      (DX_SEQ_ID = 1 AND LEFT(DX_CD,3) BETWEEN 'F01' AND 'F69') OR
      (DX_SEQ_ID = 1 AND LEFT(DX_CD,3) BETWEEN 'F90' AND 'F99') OR
      (LEFT(DX_CD,3) BETWEEN 'T36' AND 'T50')  
      )THEN 1 ELSE 0 END) AS BH_DX 
FROM MISOWN.CLAIM_DX DX
WHERE
  CLAIM_TRANS_ID IN (SELECT CLAIM_TRANS_ID FROM MISOWN.CLAIM_TRANS WHERE LATEST_TRANS_IND = 'Y' AND TCN IN (SELECT TCN FROM HEAL_ED_TCN))
GROUP BY 1)

SELECT
  CT.MBR_ID,
  CT.TCN,
  CT.SRV_DT,
  MAX(NVL(BH_DX.BH_DX,0)) AS BH_DX
FROM MISOWN.CLAIM_TRANS CT
JOIN HEAL_ED_TCN ED
  ON CT.TCN = ED.TCN
LEFT JOIN BH_DX
  ON CT.CLAIM_TRANS_ID = BH_DX.CLAIM_TRANS_ID
WHERE
  CT.LATEST_TRANS_IND = 'Y'
GROUP BY 1,2,3
;

---- 4.1.1 BH ED VISITS

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.1.1' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(COUNT(DISTINCT TCN),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN (SELECT * FROM HEAL_NUM_411_412 WHERE BH_DX = 1) U ON 
  D.MBR_ID = U.MBR_ID AND
  U.SRV_DT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3
;
--COMMIT;

---- 4.1.2 NON-BH ED VISITS

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.1.2' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(COUNT(DISTINCT TCN),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN (SELECT * FROM HEAL_NUM_411_412 WHERE BH_DX = 0) U ON 
  D.MBR_ID = U.MBR_ID AND
  U.SRV_DT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3
;
--COMMIT;



-----------------------------------------------------------------------------------------
-- MEASURE 4.2.1-4.2.3 - NUMBER OF IP NIGHTS (BH, DETOX, NON-BH)

-- HELPER TABLE: IDENTIFIES ALL CLAIMS WITHIN TIME RANGE THAT QUALIFY AS INPATIENT
-- USES OHIP DATA GOVERNANCE CATEGORIZATION FOR IDENTIFYING INPATIENT CLAIMS

DROP TABLE IF EXISTS HEAL_IP_TCN;
CREATE TABLE HEAL_IP_TCN AS 
SELECT
  CT.ADMIT_DT,
  CT.TCN
FROM MISOWN.CLAIM_TRANS CT
WHERE
  CT.LATEST_TRANS_IND = 'Y' AND 
  CT.ADMIT_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  CT.MBR_ID IN (SELECT MBR_ID FROM HEAL_DENOM_MONTH) AND
  CT.CLAIM_TRANS_SRC_CD IN ('C', 'E') AND
  CT.CLAIM_CLASS_CD = '61' AND
  (TYPE_OF_BILL_DIGITS_1_AND_2_CD IN ('11', '12', '41') OR PL_OF_SRV_BILL_TYPE_CD IN ('11', '12', '41')) AND
  (CLAIM_TRANS_ID IN 
			(SELECT DISTINCT CLAIM_TRANS_ID FROM 
			MISOWN.CLAIM_REV CR
			WHERE 
			CR.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN)
			AND REV_CD_SUB IN (
			'0110','0111','0112','0113','0114','0116','0117','0118','0119',
			'0120','0121','0122','0123','0124','0126','0127','0128','0129',
			'0130','0131','0132','0133','0134','0136','0137','0138','0139',
			'0140','0141','0142','0143','0144','0146','0147','0148','0149',
			'0150','0151','0152','0153','0154','0156','0157','0158','0159',
			'0164','0170','0171','0172','0173','0174','0179','0200','0201',
			'0202','0203','0204','0206','0207','0208','0209','0210','0211',
			'0212','0214','0219',
			'0024','0100','0101','0160', ---NEW
			'0900','0901', '0902','1001','1002','0167','0169', ---OTHER ROOM AND BOARD
			'0213') ---CORONARY CARE ROOM AND BOARD  ---NEW
			)
			OR RATE_CD IN ('4800', '4203','4220', '4801', '4802', '4803', '2957', '2993', '4213', 
			'4210','2963','2962','4608','4005','4006','4004','4003','4002','2852')
		)
GROUP BY 1,2;

DROP TABLE IF EXISTS HEAL_IP_HEADER;
CREATE LOCAL TEMPORARY TABLE HEAL_IP_HEADER
ON COMMIT PRESERVE ROWS AS 
SELECT
  CT.CLAIM_TRANS_ID
FROM MISOWN.CLAIM_TRANS CT
WHERE
  CT.LATEST_TRANS_IND = 'Y' AND 
  CT.CLAIM_LINE_NUM = 1 AND
  CT.RATE_CD NOT IN ('3130', '3131', '3132', '3133', '3134', '3135', '3136', '3137') AND
  CT.TCN IN (SELECT TCN FROM HEAL_IP_TCN)
;

DROP TABLE IF EXISTS HEAL_IP_PROC;
CREATE LOCAL TEMPORARY TABLE HEAL_IP_PROC
ON COMMIT PRESERVE ROWS AS 
SELECT
  IP.CLAIM_TRANS_ID,
  MAX(CASE WHEN PROC_CD IN ('HZ2ZZZZ', 'H0009') THEN 1 ELSE 0 END) AS DETOX_PROC
FROM HEAL_IP_HEADER IP
LEFT JOIN MISOWN.CLAIM_PROC PROC
  ON IP.CLAIM_TRANS_ID = PROC.CLAIM_TRANS_ID
GROUP BY 1;

DROP TABLE IF EXISTS HEAL_IP_DX;
CREATE LOCAL TEMPORARY TABLE HEAL_IP_DX
ON COMMIT PRESERVE ROWS AS 
SELECT 
  IP.CLAIM_TRANS_ID,
  MAX(CASE WHEN (
    --PRIMARY DX
      (DX_SEQ_ID = 1 AND LEFT(DX_CD,3) BETWEEN 'F01' AND 'F69') OR
      (DX_SEQ_ID = 1 AND LEFT(DX_CD,3) BETWEEN 'F90' AND 'F99') OR
      (LEFT(DX_CD,3) BETWEEN 'T36' AND 'T50')  
) THEN 1 ELSE 0 END) AS BH_DX
FROM HEAL_IP_HEADER IP
LEFT JOIN MISOWN.CLAIM_DX DX
  ON IP.CLAIM_TRANS_ID = DX.CLAIM_TRANS_ID
GROUP BY 1;


DROP TABLE IF EXISTS HEAL_IP_REV;
CREATE LOCAL TEMPORARY TABLE HEAL_IP_REV 
ON COMMIT PRESERVE ROWS AS
SELECT
  IP.CLAIM_TRANS_ID,
  MAX(CASE WHEN REV_CD_SUB IN ('116', '126', '136', '146', '156') THEN 1 ELSE 0 END) AS DETOX_REV
FROM HEAL_IP_HEADER IP
LEFT JOIN MISOWN.CLAIM_REV REV
  ON IP.CLAIM_TRANS_ID = REV.CLAIM_TRANS_ID
GROUP BY 1;


DROP TABLE IF EXISTS IP_CLAIMS;
CREATE LOCAL TEMPORARY TABLE IP_CLAIMS
ON COMMIT PRESERVE ROWS AS
SELECT
  IP.CLAIM_TRANS_ID,
  CT.CLAIM_TRANS_SRC_CD,
  CT.MBR_ID,
  CT.BILL_PROV_ID,
  CT.ADMIT_DT,
  CT.DSCH_DT
FROM HEAL_IP_HEADER IP
JOIN MISOWN.CLAIM_TRANS CT
  ON IP.CLAIM_TRANS_ID = CT.CLAIM_TRANS_ID
WHERE
  CT.DSCH_DT IS NOT NULL AND
  CT.LATEST_TRANS_IND = 'Y';

DROP TABLE IF EXISTS LEAD_LAG;
CREATE LOCAL TEMPORARY TABLE LEAD_LAG 
ON COMMIT PRESERVE ROWS AS
SELECT
  MBR_ID,
  BILL_PROV_ID,
  ADMIT_DT,
  DSCH_DT,
  CLAIM_TRANS_ID, 
  DATEDIFF('DAY', ADMIT_DT, DSCH_DT) AS NIGHTS,
  LAG(CLAIM_TRANS_ID) OVER (PARTITION BY MBR_ID, BILL_PROV_ID ORDER BY MBR_ID, BILL_PROV_ID, ADMIT_DT, DSCH_DT) AS PREV_CTID,
  LEAD(ADMIT_DT) OVER (PARTITION BY MBR_ID, BILL_PROV_ID ORDER BY MBR_ID, BILL_PROV_ID, ADMIT_DT, DSCH_DT) AS NEXT_ADMIT,
  LEAD(DSCH_DT) OVER (PARTITION BY MBR_ID, BILL_PROV_ID ORDER BY MBR_ID, BILL_PROV_ID, ADMIT_DT, DSCH_DT) AS NEXT_DSCH,
  LAG(ADMIT_DT) OVER (PARTITION BY MBR_ID, BILL_PROV_ID ORDER BY MBR_ID, BILL_PROV_ID, ADMIT_DT, DSCH_DT) AS PREV_ADMIT,
  LAG(DSCH_DT) OVER (PARTITION BY MBR_ID, BILL_PROV_ID ORDER BY MBR_ID, BILL_PROV_ID, ADMIT_DT, DSCH_DT) AS PREV_DSCH
FROM IP_CLAIMS
ORDER BY 1,2,3,4;

DROP TABLE IF EXISTS ADMIT_DT;
CREATE LOCAL TEMPORARY TABLE  ADMIT_DT
ON COMMIT PRESERVE ROWS AS
SELECT 
  *,
  CASE WHEN DATEDIFF('DAY', PREV_DSCH, ADMIT_DT) <= 1 THEN 0 ELSE 1 END AS USE_DX,
  CASE WHEN ADMIT_DT = PREV_ADMIT AND DSCH_DT = PREV_DSCH THEN 0 ELSE 1 END AS USE_NIGHTS
FROM LEAD_LAG ;


DROP TABLE IF EXISTS HEAL_NUM_42X;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_42X
ON COMMIT PRESERVE ROWS AS 
SELECT
  TEMP.CLAIM_TRANS_ID,
  MBR_ID,
  BILL_PROV_ID,
  CASE WHEN USE_DX = 0 THEN PREV_ADMIT ELSE ADMIT_DT END AS ANCHOR_ADMIT,
  DSCH_DT,
  CASE WHEN USE_NIGHTS = 0 THEN 0 ELSE NIGHTS END AS NIGHTS, 
  DX.BH_DX OR DX2.BH_DX AS BH_DX,
  PROC.DETOX_PROC OR PROC2.DETOX_PROC AS DETOX_PROC,
  REV.DETOX_REV OR REV2.DETOX_REV AS DETOX_REV
FROM ADMIT_DT TEMP
LEFT JOIN HEAL_IP_DX DX
  ON (USE_DX = 1 AND TEMP.CLAIM_TRANS_ID = DX.CLAIM_TRANS_ID) 
LEFT JOIN HEAL_IP_DX DX2
  ON (USE_DX = 0 AND TEMP.PREV_CTID = DX.CLAIM_TRANS_ID)
LEFT JOIN HEAL_IP_PROC PROC
  ON (USE_DX = 1 AND TEMP.CLAIM_TRANS_ID = PROC.CLAIM_TRANS_ID) 
LEFT JOIN HEAL_IP_PROC PROC2
  ON (USE_DX = 0 AND TEMP.PREV_CTID = PROC.CLAIM_TRANS_ID)
LEFT JOIN HEAL_IP_REV REV
  ON (USE_DX = 1 AND TEMP.CLAIM_TRANS_ID = REV.CLAIM_TRANS_ID) 
LEFT JOIN HEAL_IP_REV REV2
  ON (USE_DX = 0 AND TEMP.PREV_CTID = REV.CLAIM_TRANS_ID)
ORDER BY MBR_ID, BILL_PROV_ID, ADMIT_DT
;
---- 4.2.1 BH IP NIGHTS (NON-DETOX)

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.2.1' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(SUM(NIGHTS),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN (SELECT * FROM HEAL_NUM_42X WHERE BH_DX = 1 AND DETOX_REV = 0 AND DETOX_PROC = 0) U
  ON D.MBR_ID = U.MBR_ID AND
     U.ANCHOR_ADMIT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3;
--COMMIT;

---- 4.2.2 DETOX IP NIGHTS

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.2.2' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(SUM(NIGHTS),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN (SELECT * FROM HEAL_NUM_42X WHERE DETOX_REV = 1 OR DETOX_PROC = 1) U
  ON D.MBR_ID = U.MBR_ID AND
     U.ANCHOR_ADMIT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3;
--COMMIT;

-- ADD RESULTS TO MONTH NUMERATOR TABLE
INSERT INTO HEAL_NUM_MONTH
SELECT
  '4.2.2' AS MSR_ID,
  D.MONTH,
  D.MBR_ID,
  NVL(SUM(NIGHTS),0) AS MSR_VAL
FROM HEAL_DENOM_MONTH D
LEFT JOIN (SELECT * FROM HEAL_NUM_42X WHERE DETOX_REV = 1 OR DETOX_PROC = 1) U ON 
  D.MBR_ID = U.MBR_ID AND
  D.MONTH = DATE_TRUNC('MONTH', U.ANCHOR_ADMIT)
GROUP BY 1,2,3;
--COMMIT;

---- 4.2.3 NON-IP NIGHTS

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.2.3' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(SUM(NIGHTS),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN (SELECT * FROM HEAL_NUM_42X WHERE BH_DX = 0 AND DETOX_REV = 0 AND DETOX_PROC = 0) U
  ON D.MBR_ID = U.MBR_ID AND
     U.ANCHOR_ADMIT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3;
--COMMIT;


-----------------------------------------------------------------------------------------
-- MEASURE 4.3.1 - NUMBER OF BH NON-DETOX RESIDENTIAL NIGHTS
-- IDENTIFY RES DETOX CLAIMS VIA PLACE OF SERVICE OR PROC OR REV
-- ORDER CLAIMS BY ADMIT/DSCH AND IDENTIFY WHERE GAP BETWEEN < 2 DAYS
-- COLLAPSE CLAIMS PART OF SAME CHAIN AND FIND DIFFERENCE BETWEEN MIN ADMIT AND MAX DSCH

DROP TABLE IF EXISTS HEAL_RES_BH_CLAIMS;
CREATE TABLE HEAL_RES_BH_CLAIMS AS 
SELECT
  CT.CLAIM_TRANS_ID,
  TCN,
  CLAIM_TRANS_SRC_CD,
  PL_OF_SRV_BILL_TYPE_CD,
  CLAIM_CLASS_CD, 
  MBR_ID,
  SRV_DT,
  ADMIT_DT,
  DSCH_DT,
  SRV_END_DT,
  BILL_NPI,
  BILL_PROV_ID,
  BILL_PROV_NAME,
  PROC_CD_1,
  UNITS_QTY,
  CR.REV_CD,
  NET_PD_AMT_WITHOUT_PGP,
  MC_RPT_PLAN_PD_AMT
FROM MISOWN.CLAIM_TRANS CT
LEFT JOIN (
  SELECT
    CLAIM_TRANS_ID,
    MAX(REV_CD_SUB) AS REV_CD
  FROM MISOWN.CLAIM_REV CR
  WHERE
    CR.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
    CR.REV_CD_SUB IN ('1001', '1002')
  GROUP BY 1
  ) CR
 ON CT.CLAIM_TRANS_ID = CR.CLAIM_TRANS_ID
WHERE
  CT.LATEST_TRANS_IND = 'Y' AND
  CT.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  PROC_CD_1 NOT IN ('H0010', 'H0011') AND
  (
  PL_OF_SRV_BILL_TYPE_CD IN ('55', '56') OR 
  PROC_CD_1 IN ('H0017', 'H0018', 'H0019', 'H2034', 'H2036') OR
  CR.CLAIM_TRANS_ID IS NOT NULL
  )
ORDER BY MBR_ID, SRV_DT
;

DROP TABLE IF EXISTS HEAL_RES_BH_SPANS;
CREATE LOCAL TEMPORARY TABLE HEAL_RES_BH_SPANS
ON COMMIT PRESERVE ROWS AS 
WITH X AS (
  SELECT
    MBR_ID,
    CLAIM_TRANS_ID,
    TCN,
    BILL_PROV_ID,
    PROC_CD_1,
    NVL(ADMIT_DT, SRV_DT) AS START_DATE,
    NVL(DSCH_DT, SRV_END_DT) AS END_DATE
  FROM HEAL_RES_BH_CLAIMS
  WHERE
    (SRV_END_DT IS NOT NULL) OR (DSCH_DT IS NOT NULL)
)
,
X2 AS (
SELECT
  X.*,
  DATEDIFF('DAY', START_DATE, END_DATE) AS NIGHTS,
  LEAD(START_DATE) OVER (PARTITION BY MBR_ID, BILL_PROV_ID ORDER BY MBR_ID, BILL_PROV_ID, START_DATE, END_DATE) AS NEXT_START,
  LAG(END_DATE) OVER (PARTITION BY MBR_ID, BILL_PROV_ID ORDER BY MBR_ID, BILL_PROV_ID, START_DATE, END_DATE) AS PREV_END
FROM X
)

SELECT
  MBR_ID,
  CLAIM_TRANS_ID,
  TCN,
  BILL_PROV_ID,
  PROC_CD_1,
  START_DATE,
  END_DATE,
  NEXT_START,
  PREV_END,
  NIGHTS
FROM X2
;

DROP TABLE IF EXISTS HEAL_NUM_431;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_431
ON COMMIT PRESERVE ROWS AS 
WITH Y AS (
SELECT
  *,
  SUM(CASE WHEN START_DATE <= (PREV_END + 1) THEN 0 ELSE 1 END) OVER (PARTITION BY MBR_ID, BILL_PROV_ID ORDER BY MBR_ID, BILL_PROV_ID, START_DATE, END_DATE) AS SPAN_GROUP
FROM HEAL_RES_BH_SPANS
)

SELECT
  MBR_ID,
  BILL_PROV_ID,
  SPAN_GROUP,
  MIN(START_DATE) AS MIN_START,
  MAX(END_DATE) AS MAX_END,
  DATEDIFF('DAY', MIN(START_DATE), MAX(END_DATE)) AS NIGHTS
FROM Y
GROUP BY 1,2,3
;

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.3.1' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(SUM(NIGHTS),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN HEAL_NUM_431 U
  ON D.MBR_ID = U.MBR_ID AND
     U.MIN_START BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3;
--COMMIT;

sELECT * FROM HEAL_RES_BH_SPANS;
SELECT * FROM HEAL_RES_BH_SPANS WHERE MBR_ID = 'CV05706Z';

-----------------------------------------------------------------------------------------
-- MEASURE 4.3.2 - NUMBER OF BH DETOX RESIDENTIAL NIGHTS
-- IDENTIFY RES DETOX CLAIMS VIA PROCEDURE CODE (H0010, H0011)
-- COLLAPSE CLAIMS TO TCN LEVEL, PULLING ADMIT/DSCH (OR SRV DT AS FALLBACK)
-- ORDER TCNS BY ADMIT/DSCH AND IDENTIFY WHERE GAP BETWEEN < 2 DAYS
-- COLLAPSE TCNS PART OF SAME CHAIN AND FIND DIFFERENCE BETWEEN MIN ADMIT AND MAX DSCH

DROP TABLE IF EXISTS HEAL_RES_DETOX_CLAIMS;
CREATE TABLE HEAL_RES_DETOX_CLAIMS AS 
SELECT
  CLAIM_TRANS_ID,
  TCN,
  MBR_ID,
  SRV_DT,
  SRV_END_DT,
  ADMIT_DT,
  DSCH_DT,
  CLAIM_LINE_NUM,
  CLAIM_TRANS_SRC_CD,  
  CLAIM_CLASS_CD,
  TYPE_OF_BILL_DIGITS_1_AND_2_CD,
  PL_OF_SRV_BILL_TYPE_CD,
  PROC_CD_1,
  BILL_NPI
FROM MISOWN.CLAIM_TRANS
WHERE
  LATEST_TRANS_IND = 'Y' AND 
  SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  PROC_CD_1 IN ('H0010', 'H0011')
ORDER BY MBR_ID, ADMIT_DT, SRV_DT
;

DROP TABLE IF EXISTS HEAL_RES_DETOX_TCN; 
CREATE LOCAL TEMPORARY TABLE HEAL_RES_DETOX_TCN 
ON COMMIT PRESERVE ROWS AS
WITH X AS (
SELECT --COLLAPSE TO TCN LEVEL
  TCN,
  MBR_ID,
  BILL_NPI,
  CLAIM_TRANS_SRC_CD,
  MIN(NVL(ADMIT_DT, SRV_DT)) AS ADMIT,
  MAX(NVL(DSCH_DT, SRV_DT)) AS DSCH
FROM HEAL_RES_DETOX_CLAIMS
GROUP BY 1,2,3,4
ORDER BY 2,3,5
) 

SELECT
  X.*,
  DATEDIFF('DAY', ADMIT, DSCH) AS NIGHTS,
  LAG(TCN) OVER (PARTITION BY MBR_ID, BILL_NPI ORDER BY MBR_ID, BILL_NPI, ADMIT, DSCH) AS PREV_TCN,
  LEAD(ADMIT) OVER (PARTITION BY MBR_ID, BILL_NPI ORDER BY MBR_ID, BILL_NPI, ADMIT, DSCH) AS NEXT_ADMIT,
  LAG(DSCH) OVER (PARTITION BY MBR_ID, BILL_NPI ORDER BY MBR_ID, BILL_NPI, ADMIT, DSCH) AS PREV_DSCH
FROM X
;

DROP TABLE IF EXISTS HEAL_NUM_432;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_432
ON COMMIT PRESERVE ROWS AS
WITH Y AS (
SELECT
  *,
  SUM(CASE WHEN ADMIT <= (PREV_DSCH + 1) THEN 0 ELSE 1 END) OVER (PARTITION BY MBR_ID, BILL_NPI ORDER BY MBR_ID, BILL_NPI, ADMIT, DSCH) AS SPAN_GROUP
FROM HEAL_RES_DETOX_TCN 
)

SELECT
  MBR_ID,
  BILL_NPI,
  SPAN_GROUP,
  COUNT(*) AS N,
  MIN(ADMIT) AS ADMIT,
  MAX(DSCH) AS DSCH,
  DATEDIFF('DAY', MIN(ADMIT), MAX(DSCH)) AS NIGHTS
FROM Y
GROUP BY 1,2,3
;

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.3.2' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(SUM(NIGHTS),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN HEAL_NUM_432 U
  ON D.MBR_ID = U.MBR_ID AND
     U.ADMIT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3;
--COMMIT;


-----------------------------------------------------------------------------------------
-- MEASURE 4.4.1 - NUMBER OF INTENSTIVE OUTPATIENT VISITS
-- IDENTIFY IOP CLAIMS BASED ON PROC OR REV
-- SUMMARIZE INTO VISITS (MEMBER - PROVIDER - SERVICE DATE COMBINATIONS)

DROP TABLE IF EXISTS HEAL_NUM_441;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_441
ON COMMIT PRESERVE ROWS AS 
SELECT
  CLAIM_TRANS_ID,
  TCN,
  MBR_ID,
  SRV_DT,
  CLAIM_TRANS_SRC_CD,  
  CLAIM_CLASS_CD,
  TYPE_OF_BILL_DIGITS_1_AND_2_CD,
  PROC_CD_1,
  BILL_NPI
FROM MISOWN.CLAIM_TRANS CT
WHERE
  CT.LATEST_TRANS_IND = 'Y' AND 
  CT.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  (
    CT.PROC_CD_1 IN ('H0015', 'H0035', 'S9480', 'S0201') OR
    CT.CLAIM_TRANS_ID IN (
       SELECT
        CLAIM_TRANS_ID
      FROM MISOWN.CLAIM_REV CR
      WHERE
        CR.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
        REV_CD_SUB IN ('0905', '0906', '0907', '0912', '0913')
    )
  )
;

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.4.1' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(COUNT(DISTINCT U.MBR_ID||SRV_DT||BILL_NPI),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN HEAL_NUM_441 U ON 
  D.MBR_ID = U.MBR_ID AND
  U.SRV_DT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3
;
--COMMIT;

-----------------------------------------------------------------------------------------
-- MEASURE 4.5.1-4.5.2 - NUMBER OF BH/NON-BH OUTPATIENT VISITS
-- IDENTIFY OUTPATIENT CLAIMS BASED ON PLACE OF SERVICE 
-- DETERMINE WHICH CLAIMS HAD BH DIAGNOSIS
-- SUMMARIZE INTO VISITS (MEMBER - PROVIDER - SERVICE DATE COMBINATIONS)

DROP TABLE IF EXISTS HEAL_OP_CLAIMS;
CREATE TABLE HEAL_OP_CLAIMS AS
WITH OP_CLAIMS AS (
SELECT
  CLAIM_TRANS_ID,
  TCN,
  MBR_ID,
  SRV_DT,
  CLAIM_TRANS_SRC_CD,
  CLAIM_CLASS_CD,
  TYPE_OF_BILL_DIGITS_1_AND_2_CD,
  PL_OF_SRV_BILL_TYPE_CD,
  BILL_NPI,
  BILL_PROV_ID,
  PROC_CD_1
FROM MISOWN.CLAIM_TRANS CT
WHERE
  CT.LATEST_TRANS_IND = 'Y' AND 
  CT.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  PL_OF_SRV_BILL_TYPE_CD IN ('02', '03', '04', '05', '06', '07', '08', '11', '12', '14', '15', '16', '17', '18', '19', '20', '22', '24', '49', '50', '53', '57', '58', '62', '71', '72') AND
  CLAIM_TRANS_ID NOT IN (
    SELECT
      CLAIM_TRANS_ID
    FROM MISOWN.CLAIM_PROC
    WHERE
      SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
      PROC_CD IN ('99281', '99282', '99283', '99284', '99285', '99288', 'H2034', 'H2036', 'H0010', 'H0011', 'H0015', 'H0017', 'H0018', 'H0019', 'H0035', 'S9480', 'S0201')
    ) AND
  CLAIM_TRANS_ID NOT IN (
    SELECT
      CLAIM_TRANS_ID
    FROM MISOWN.CLAIM_REV
    WHERE
      SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
      (
        (REV_CD_SUB BETWEEN '0100' AND '0219') OR
        (REV_CD_SUB IN ('0450', '0451', '0452', '0456', '0459', '0981', '0905', '0906', '0907', '0912', '0913', '1001', '1002'))
      )
    ) AND
  TCN NOT IN (SELECT TCN FROM HEAL_IP_TCN)
)

SELECT
  OP.*,
  BH.BH_DX
FROM OP_CLAIMS OP
LEFT JOIN (
  SELECT
    CLAIM_TRANS_ID,
    MAX(CASE WHEN ((DX_SEQ_ID = 1 AND LEFT(DX_CD,3) BETWEEN 'F01' AND 'F69') OR
                   (DX_SEQ_ID = 1 AND LEFT(DX_CD,3) BETWEEN 'F90' AND 'F99')) THEN 1 ELSE 0 END) AS BH_DX
  FROM MISOWN.CLAIM_DX
  WHERE 
    CLAIM_TRANS_ID IN (SELECT CLAIM_TRANS_ID FROM OP_CLAIMS)
  GROUP BY 1
)  BH
  ON OP.CLAIM_TRANS_ID = BH.CLAIM_TRANS_ID
;

DROP TABLE IF EXISTS HEAL_NUM_45X;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_45X 
ON COMMIT PRESERVE ROWS AS
SELECT
  MBR_ID,
  SRV_DT,
  NVL(BILL_NPI, BILL_PROV_ID) AS PROV,
  MAX(DISTINCT BH_DX) AS BH_DX
FROM HEAL_OP_CLAIMS
GROUP BY 1,2,3
;  

--  4.5.1 - NUMBER OF BH OP VISITS

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.5.1' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(COUNT(DISTINCT U.MBR_ID||U.SRV_DT||U.PROV),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN (SELECT * FROM HEAL_NUM_45X WHERE BH_DX = 1) U ON 
  D.MBR_ID = U.MBR_ID AND
  U.SRV_DT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3
;
--COMMIT;

--  4.5.2 - NUMBER OF NON-BH OP VISITS

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.5.2' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(COUNT(DISTINCT U.MBR_ID||U.SRV_DT||U.PROV),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN (SELECT * FROM HEAL_NUM_45X WHERE BH_DX = 0) U ON 
  D.MBR_ID = U.MBR_ID AND
  U.SRV_DT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3
;
--COMMIT;



-----------------------------------------------------------------------------------------
-- MEASURE 4.6.1 - DAYS SUPPLIED FOR ORAL NON-PAIN BUPRENORPHINE
-- SPEC LISTS DAYS SUPPLY FROM TWO PARTS: 
--            (1) OUTPATIENT CLAIMS WITH APPROPRIATE PROCEDURE CODES
--            (2) PHARMACY CLAIMS WITH APPROPRIATE NDC [USE SUPPLY_DAYS FROM CLAIM]
-- CROSSWALK OF PROCEDURE CODE TO DAYS SUPPLY PROVIDED BY OQPS

DROP TABLE IF EXISTS HEAL_NUM_461;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_461
ON COMMIT PRESERVE ROWS AS

SELECT
  CT.CLAIM_TRANS_ID,
  CT.MBR_ID,
  CT.SRV_DT,
  CT.NDC,
  CP.PROC_CD,
  CASE WHEN CT.CLAIM_CLASS_CD = '62' THEN CT.SUPPLY_DAYS
       WHEN CT.CLAIM_CLASS_CD IN ('60', '61') AND PROC_CD IN ('J0571', 'J0572', 'J0573', 'J0574', 'J0575') THEN 1 
       WHEN CT.CLAIM_CLASS_CD IN ('60', '61') AND PROC_CD IN ('G2068', 'G2079') THEN 7
       ELSE 0 END AS SUPPLY_DAYS
FROM MISOWN.CLAIM_TRANS CT
LEFT JOIN MISOWN.CLAIM_PROC CP
  ON CT.CLAIM_TRANS_ID = CP.CLAIM_TRANS_ID 
LEFT JOIN HEAL_NDC NDC
  ON CT.NDC = NDC.NDC_UPC_HRI
WHERE
  CT.LATEST_TRANS_IND = 'Y' AND
  CT.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  CT.CLAIM_TRANS_SRC_CD IN ('C', 'E') AND 
  (
  -- OP CLAIMS
  (CT.CLAIM_CLASS_CD IN ('60', '61') AND
    CP.PROC_CD IN ('J0571', 'J0572', 'J0573', 'J0574', 'J0575', 'G2068', 'G2079') AND
    CT.TCN NOT IN (SELECT TCN FROM HEAL_IP_TCN))
  OR
  --PHARM CLAIMS
  (NDC.HEAL_DRUG_CAT = 'BUP' AND
  NDC.BUP_INJECTION = 0) 
  )  
;

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.6.1' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(SUM(SUPPLY_DAYS),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN HEAL_NUM_461 U ON 
  D.MBR_ID = U.MBR_ID AND
  U.SRV_DT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3
;
--COMMIT;

-----------------------------------------------------------------------------------------
-- MEASURE 4.6.2 - NUMBER OF NON-PAIN BUPRENORPHINE INJECTIONS
-- TWO PARTS: (1) OUTPATIENT CLAIMS WITH APPROPRIATE PROCEDURE CODES
--            (2) PHARMACY CLAIMS WITH APPROPRIATE NDC
-- EXCLUDE INPATIENT CLAIMS FROM PROCEDURE CODE CHECK

DROP TABLE IF EXISTS HEAL_NUM_462;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_462
ON COMMIT PRESERVE ROWS AS 

SELECT
  CT.CLAIM_TRANS_ID,
  CT.MBR_ID,
  CT.SRV_DT
FROM MISOWN.CLAIM_TRANS CT
LEFT JOIN MISOWN.CLAIM_PROC CP
  ON CT.CLAIM_TRANS_ID = CP.CLAIM_TRANS_ID
LEFT JOIN HEAL_NDC NDC
  ON CT.NDC = NDC.NDC_UPC_HRI
WHERE 
  CT.LATEST_TRANS_IND = 'Y' AND 
  CT.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  CT.CLAIM_TRANS_SRC_CD IN ('C', 'E') AND 
  ( -- OP CLAIMS
    (CT.CLAIM_CLASS_CD IN ('60', '61') AND
    CP.PROC_CD IN ('Q9991', 'Q9992') AND
    CT.TCN NOT IN (SELECT TCN FROM HEAL_IP_TCN))
      
  OR
   -- PHARM CLAIMS
    (CT.CLAIM_CLASS_CD IN ('62') AND
     NDC.HEAL_DRUG_CAT = 'BUP' AND
     NDC.BUP_INJECTION = 1))
;

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.6.2' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(COUNT(DISTINCT U.CLAIM_TRANS_ID),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN HEAL_NUM_462 U ON 
  D.MBR_ID = U.MBR_ID AND
  U.SRV_DT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3
;
--COMMIT;


-----------------------------------------------------------------------------------------
-- MEASURE 4.6.3 - DAYS SUPPLIED FOR OPIOID RELATED ORAL NALTREXONE
-- IDENTIFY PHARMACY CLAIMS BASED ON APPROPRIATE NDC
-- SUPPLY DAYS OFF PHARMACY CLAIM
-- LIMIT TO OUD MEMBERS ONLY IN FINAL MEASURE RESULTS EXPORT - *OUTSIDE SQL*

DROP TABLE IF EXISTS HEAL_NUM_463;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_463
ON COMMIT PRESERVE ROWS AS

SELECT
  CT.CLAIM_TRANS_ID,
  CT.MBR_ID,
  CT.SRV_DT,
  CT.NDC,
  CT.SUPPLY_DAYS
FROM MISOWN.CLAIM_TRANS CT
LEFT JOIN HEAL_NDC NDC
  ON CT.NDC = NDC.NDC_UPC_HRI
WHERE
  CT.LATEST_TRANS_IND = 'Y' AND 
  CT.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  CT.CLAIM_TRANS_SRC_CD IN ('C', 'E') AND 
  NDC.HEAL_DRUG_CAT = 'NALTREXONE'
;

-- ADD RESULTS TO YEAR NUMERATOR TABLE    
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.6.3' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(SUM(SUPPLY_DAYS),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN HEAL_NUM_463 U ON 
  D.MBR_ID = U.MBR_ID AND
  U.SRV_DT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3
;
--COMMIT;


-----------------------------------------------------------------------------------------
-- MEASURE 4.6.4 - NUMBER OF OPIOID RELATED NALTREXONE INJECTIONS
-- TWO PARTS: (1) OUTPATIENT CLAIMS WITH APPROPRIATE PROCEDURE CODES
--            (2) PHARMACY CLAIMS WITH APPROPRIATE NDC
-- EXCLUDE INPATIENT CLAIMS FROM PROCEDURE CODE CHECK
-- LIMIT TO OUD MEMBERS ONLY IN FINAL MEASURE RESULTS EXPORT - *OUTSIDE SQL*

DROP TABLE IF EXISTS HEAL_NUM_464;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_464
ON COMMIT PRESERVE ROWS AS 
SELECT
  CT.CLAIM_TRANS_ID,
  CT.MBR_ID,
  CT.SRV_DT
FROM MISOWN.CLAIM_TRANS CT
LEFT JOIN MISOWN.CLAIM_PROC CP
  ON CT.CLAIM_TRANS_ID = CP.CLAIM_TRANS_ID
LEFT JOIN HEAL_NDC NDC
  ON CT.NDC = NDC.NDC_UPC_HRI
WHERE 
  CT.LATEST_TRANS_IND = 'Y' AND 
  CT.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  CT.CLAIM_TRANS_SRC_CD IN ('C', 'E') AND 
  ( -- OP CLAIMS
    (CT.CLAIM_CLASS_CD IN ('60', '61') AND
    CP.PROC_CD IN ('J2315') AND
    CT.TCN NOT IN (SELECT TCN FROM HEAL_IP_TCN))
      
  OR
   -- PHARM CLAIMS
    (CT.CLAIM_CLASS_CD IN ('62') AND
     NDC.HEAL_DRUG_CAT = 'VIVITROL')
  )
;

-- ADD RESULTS TO YEAR NUMERATOR TABLE
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.6.4' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(COUNT(DISTINCT U.CLAIM_TRANS_ID),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN HEAL_NUM_464 U ON 
  D.MBR_ID = U.MBR_ID AND
  U.SRV_DT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3
;
--COMMIT;

-----------------------------------------------------------------------------------------
-- MEASURE 4.6.5 - NUMBER OF METHADONE DAYS SUPPLIED
-- IDENTIFY CLAIMS BASED ON PROCEDURE CODE (H0020, G2067, G2078)
-- EXCLUDE INPATIENT CLAIMS FROM PROCEDURE CODE CHECK

-- CALCULATE DAYS SUPPLIED BASED ON SERVICE COUNT BY PROCEDURE
-- H0020 = 1 DAYS SUPPLY, G2067 OR G2078 = 7 DAYS SUPPLY

DROP TABLE IF EXISTS HEAL_NUM_465;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_465
ON COMMIT PRESERVE ROWS AS 
SELECT
  CT.CLAIM_TRANS_ID,
  CT.MBR_ID,
  CT.SRV_DT,
  CP.PROC_CD
FROM MISOWN.CLAIM_TRANS CT
JOIN MISOWN.CLAIM_PROC CP
  ON CT.CLAIM_TRANS_ID = CP.CLAIM_TRANS_ID
WHERE 
  CT.LATEST_TRANS_IND = 'Y' AND 
  CT.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  CT.CLAIM_TRANS_SRC_CD IN ('C', 'E') AND 
  CT.CLAIM_CLASS_CD IN ('60', '61') AND
  CP.PROC_CD IN ('H0020', 'G2067', 'G2078') AND
  CT.TCN NOT IN (SELECT TCN FROM HEAL_IP_TCN)  
GROUP BY 1,2,3,4
;

-- ADD RESULTS TO YEAR NUMERATOR TABLE
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.6.5' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(SUM(
    CASE WHEN PROC_CD = 'H0020' THEN 1
       WHEN PROC_CD IN ('G2067', 'G2078') THEN 7
       END),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN HEAL_NUM_465 U ON 
  D.MBR_ID = U.MBR_ID AND
  U.SRV_DT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3
;
--COMMIT;

-----------------------------------------------------------------------------------------
-- MEASURE 4.7.1 - NUMBER OF OPIOID PAIN MEDICATION DAYS SUPPLIED
-- IDENTIFY PHARMACY CLAIMS BASED ON APPROPRIATE NDC
-- SUPPLY DAYS OFF PHARMACY CLAIM

DROP TABLE IF EXISTS HEAL_NUM_471;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_471
ON COMMIT PRESERVE ROWS AS

SELECT
  CT.CLAIM_TRANS_ID,
  CT.MBR_ID,
  CT.SRV_DT,
  CT.NDC,
  CT.SUPPLY_DAYS
FROM MISOWN.CLAIM_TRANS CT
LEFT JOIN HEAL_NDC NDC
  ON CT.NDC = NDC.NDC_UPC_HRI
WHERE
  CT.LATEST_TRANS_IND = 'Y' AND 
  CT.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  CT.CLAIM_TRANS_SRC_CD IN ('C', 'E') AND 
  NDC.HEAL_DRUG_CAT = 'OP'
;

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.7.1' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(SUM(SUPPLY_DAYS),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN HEAL_NUM_471 U ON 
  D.MBR_ID = U.MBR_ID AND
  U.SRV_DT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3
;
--COMMIT;


-----------------------------------------------------------------------------------------
-- MEASURE 4.7.2 - NUMBER OF NON-OPIOID PAIN MEDICATION DAYS SUPPLIED
-- IDENTIFY PHARMACY CLAIMS BASED ON APPROPRIATE NDC
-- SUPPLY DAYS OFF PHARMACY CLAIM

DROP TABLE IF EXISTS HEAL_NUM_472;
CREATE LOCAL TEMPORARY TABLE HEAL_NUM_472
ON COMMIT PRESERVE ROWS AS

SELECT
  CT.CLAIM_TRANS_ID,
  CT.MBR_ID,
  CT.SRV_DT,
  CT.NDC,
  CT.SUPPLY_DAYS
FROM MISOWN.CLAIM_TRANS CT
LEFT JOIN HEAL_NDC NDC
  ON CT.NDC = NDC.NDC_UPC_HRI
WHERE
  CT.LATEST_TRANS_IND = 'Y' AND 
  CT.SRV_DT BETWEEN (SELECT START_DATE FROM HEAL_RUN) AND (SELECT END_DATE FROM HEAL_RUN) AND
  CT.CLAIM_TRANS_SRC_CD IN ('C', 'E') AND 
  NDC.HEAL_DRUG_CAT = 'NON-OP'
;

-- ADD RESULTS TO YEAR NUMERATOR TABLE  
INSERT INTO HEAL_NUM_YEAR
SELECT
  '4.7.2' AS MSR_ID,
  D.YEAR,
  D.MBR_ID,
  NVL(SUM(SUPPLY_DAYS),0) AS MSR_VAL
FROM HEAL_DENOM_YEAR D
LEFT JOIN HEAL_NUM_472 U ON 
  D.MBR_ID = U.MBR_ID AND
  U.SRV_DT BETWEEN D.START_DATE AND D.END_DATE
GROUP BY 1,2,3
;
--COMMIT;


INSERT INTO HEAL_BASE
SELECT 
  N.MSR_ID,
  HELP.MEASURE_NUM,
  CASE WHEN LEFT(N.YEAR,2) = 'CY' THEN 'CALENDAR'
       WHEN LEFT(N.YEAR,3) = 'SFY' THEN 'STATE'
       WHEN LEFT(N.YEAR,3) = 'FFY' THEN 'FEDERAL'
       END AS YEAR_TYPE,
  RIGHT(N.YEAR,4) AS MSR_YR,
  HELP.MEASURE_DESC AS MSR_DESC,
  D.MBR_RES_COUNTY,
  CASE WHEN D.MBR_AGE BETWEEN 0 AND 4 THEN '0-4'
       WHEN D.MBR_AGE BETWEEN 5 AND 9 THEN '5-9'
       WHEN D.MBR_AGE BETWEEN 10 AND 14 THEN '10-14'
       WHEN D.MBR_AGE BETWEEN 15 AND 17 THEN '15-17'
       WHEN D.MBR_AGE BETWEEN 18 AND 21 THEN '18-21'
       WHEN D.MBR_AGE BETWEEN 22 AND 24 THEN '22-24'
       WHEN D.MBR_AGE BETWEEN 25 AND 34 THEN '25-34'
       WHEN D.MBR_AGE BETWEEN 35 AND 44 THEN '35-44'
       WHEN D.MBR_AGE BETWEEN 45 AND 54 THEN '45-54'
       WHEN D.MBR_AGE BETWEEN 55 AND 64 THEN '55-64'
       WHEN D.MBR_AGE >=65 THEN '65 and over'
       ELSE 'UNAVAILABLE'
       END AS 'AGE_GROUP',
  D.PLAN_GROUP,
  D.RACE_DESCRIPTION,
  SUM(MSR_VAL) AS NUM,
  COUNT(D.MBR_ID) AS DEN
FROM (SELECT MSR_ID, YEAR, MBR_ID, MSR_VAL FROM HEAL_NUM_YEAR GROUP BY 1,2,3,4) N
JOIN HEAL_DENOM_YEAR D
  ON N.MBR_ID = D.MBR_ID AND
     N.YEAR = D.YEAR
JOIN HEAL_HELPER HELP
  ON N.MSR_ID = HELP.MEASURE_NUM
GROUP BY 1,2,3,4,5,6,7,8,9;

select distinct MEASURE_DESC from RTACANDONG.HEAL_BASE;
COMMIT;

select * from HEAL_BASE WHERE MEASURE_NUM = '4.1.1';
